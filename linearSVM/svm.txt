float LinearSVM::loss_one_image(const std::vector<int> &image, const int &y){

    assert(image.size() == 3073);

    std::vector<float> scores(10, 0);

    // Compute scores
    // scores = W*x
    for(int c=0; c<C; ++c){
        for(int d=0; d<D; ++d){
            scores[c] += W(c,d)*image[d];
        }
    }

    // Compute loss
    float loss = 0;
    for (int j=0; j<C; ++j)
    {
        if(j==y) continue;
        float margin = scores[j] - scores[y] + 1;
        if (margin > 0.0f){
            loss += margin;

            // Compute gradient
            for (int d=0; d<D; ++d){
                dW(y,d) -= image[d];
                dW(j,d) += image[d];
            }

        }
    }


    return loss;
}
